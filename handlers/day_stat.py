from telegram import Update
from telegram.ext import CallbackContext
from datetime import datetime
from db.queries import (
  get_marathon_participants,
  get_members_who_submitted,
  get_members_ill_that_day,
  get_marathon_id_by_name
)

def day_stat_command(update: Update, context: CallbackContext):
  if len(context.args) < 2:
    update.effective_message.reply_text("–§–æ—Ä–º–∞—Ç: /day_stat <–º–∞—Ä–∞—Ñ–æ–Ω> <–¥–∞—Ç–∞>")
    return

  name = context.args[0]
  try:
    target_date = datetime.strptime(context.args[1], "%Y-%m-%d").date()
  except:
    update.effective_message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã")
    return

  marathon_id = get_marathon_id_by_name(name)
  if not marathon_id:
    update.effective_message.reply_text("–ú–∞—Ä–∞—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return

  participants = get_marathon_participants(marathon_id)
  submitted = get_members_who_submitted(marathon_id, target_date)
  ill = get_members_ill_that_day(target_date)

  present = []
  missing = []

  for member_id, name in participants:
    if member_id in ill:
      continue
    elif member_id in submitted:
      present.append(name)
    else:
      missing.append(name)

  text = f"""üìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {target_date}:
‚úÖ –°–¥–∞–ª–∏: {', '.join(present) or '–Ω–∏–∫—Ç–æ'}
‚ùå –ù–µ —Å–¥–∞–ª–∏: {', '.join(missing) or '–Ω–∏–∫–æ–≥–æ'}"""
  update.effective_message.reply_text(text)
